{"version":3,"sources":["component/SearchBar.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","handleChange","e","_this","props","onSearchTermChange","searchTerm","this","react_default","a","createElement","className","placeholder","onChange","value","Component","App","state","data","linkOpened","filter","sortBy","componentDidMount","fetch","then","response","json","setState","children","after","concat","catch","err","console","log","test","forEach","link_flair_text","makeDate","seconds","Date","toLocaleString","onLinkClick","prevState","target","onFilterChange","onSortByChange","_this2","filteredData","post","title","toLowerCase","includes","sort","b","created","score","SearchBar_SearchBar","map","d","key","id","href","url","rel","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02ddc654.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class SearchBar extends Component {\r\n    handleChange = e => {\r\n        this.props.onSearchTermChange(e);\r\n    }\r\n  render() {\r\n      const { searchTerm } = this.props; \r\n    return (\r\n      <div className=\"flex-centered margin-top-bottom--small\">\r\n        <input \r\n        placeholder=\"Search Post\"\r\n        className=\"search-bar\"\r\n        onChange={this.handleChange}\r\n        value={searchTerm}>\r\n        </input>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport './style/main.scss';\nimport SearchBar from './component/SearchBar';\n// import { chainFetch } from './Helper';\n\nclass App extends Component {\n  state = {\n    data: [],\n    linkOpened: false,\n    searchTerm: '',\n    filter: 'Post Game Thread',\n    sortBy: 'date'\n  }\n\n  componentDidMount = () => {\n    fetch('https://www.reddit.com/r/nba.json?limit=100').then(response => {\n      return response.json();\n    }).then(json => {\n      this.setState({\n        data: json.data.children\n      })\n      var after = json.data.after;\n      return fetch(`https://www.reddit.com/r/nba.json?after=${after}&limit=100`);\n    })\n    .then(response => response.json())\n    .then(json => {\n      this.setState({\n        data: this.state.data.concat(json.data.children)\n      })\n      var after = json.data.after;\n      return fetch(`https://www.reddit.com/r/nba.json?after=${after}&limit=100`);\n    })\n    .then(response => response.json())\n    .then(json => {\n      this.setState({\n        data: this.state.data.concat(json.data.children)\n      })\n      var after = json.data.after;\n      return fetch(`https://www.reddit.com/r/nba.json?after=${after}&limit=100`)\n    })\n    .then(response => response.json())\n    .then(json => {\n      this.setState({\n        data: this.state.data.concat(json.data.children)\n      })\n      var after = json.data.after;\n      return fetch(`https://www.reddit.com/r/nba.json?after=${after}&limit=100`);\n    })\n    .then(response => response.json())\n    .then(json => {\n      this.setState({\n        data: this.state.data.concat(json.data.children)\n      })\n      var after = json.data.after;\n      return fetch(`https://www.reddit.com/r/nba.json?after=${after}&limit=100`);\n    })\n    .catch(err => console.log('Request failed' + err))\n  };\n\n  test = e => {\n    console.log(this.state.data)\n    this.state.data.forEach(e => {\n      console.log(e.data.link_flair_text)\n    })\n  }\n\n  makeDate = (seconds) => {\n    var date = new Date(seconds * 1000);\n    var dateString = date.toLocaleString();\n    return dateString;\n  }\n\n  onLinkClick = e => {\n    this.setState(prevState => ({\n      linkOpened: !prevState.linkOpened\n    }))\n  }\n\n  onSearchTermChange = e => {\n    this.setState({\n      searchTerm: e.target.value\n    })\n  }\n  onFilterChange = e => {\n    this.setState({\n      filter: e.target.value\n    })\n  }\n  onSortByChange = e => {\n    this.setState({\n      sortBy: e.target.value\n    })\n  }\n\n  // To do:\n  // 1. Search bar\n  // 2. Different filter\n\n  render() {\n    const searchTerm = this.state.searchTerm;\n    const filter = this.state.filter;\n    var filteredData = this.state.data.filter(post => post.data.title.toLowerCase().includes(searchTerm.toLowerCase()));\n    if (this.state.sortBy === \"date\") {\n      filteredData = filteredData.sort((a, b) => { return b.data.created - a.data.created })\n    } else if (this.state.sortBy === \"score\") {\n      filteredData = filteredData.sort((a, b) => { return b.data.score - a.data.score })\n    }\n    return (\n      <div className=\"app\">\n        <div className=\"heading\">\n          All <span className=\"linear-gradient-orange\">r/nba</span> post game thread\n        </div>\n        <SearchBar\n          onSearchTermChange={this.onSearchTermChange}\n          searchTerm={this.state.searchTerm}\n        />\n        <select onChange={this.onFilterChange}>\n          <option value=\"Post Game Thread\">Post Game Thread</option>\n          <option value=\"Highlights\">Highlights</option>\n        </select>\n        <select onChange={this.onSortByChange}>\n          <option value=\"date\">Date</option>\n          <option value=\"score\">Score</option>\n        </select>\n        <div className=\"wrapper--list\">\n          <div className=\"list-item\">\n            <div className=\"title-score\">\n              <p className=\"label\">Score</p>\n              <p className=\"label--big\">Post Title</p>\n            </div>\n          </div>\n          {filteredData.map(d => {\n            if (d.data.link_flair_text === filter) {\n              return (\n                <div className=\"list-item\" key={d.data.id}>\n                  <p className=\"date\">{this.makeDate(d.data.created)}</p>\n                  <div className=\"title-score\">\n                    <p className=\"score\">{d.data.score}</p>\n                    <a\n                      href={d.data.url}\n                      rel=\"noopener noreferrer\"\n                      target=\"_blank\"\n                      className=\"link\">{d.data.title}</a>\n                  </div>\n                </div>\n              )\n            } else {\n              return null;\n            }\n          })}\n        </div>\n        {/* {this.state.linkOpened &&\n        <iframe title=\"popout\" className=\"popout\" width=\"80vw\" height=\"80vh\" src=\"https://www.example.com/show?data...\">\n        </iframe>\n        }\n        {this.state.linkOpened &&\n          <div onClick={this.onLinkClick} className=\"black-background\">\n          </div>\n        } */}\n\n\n        {/* <iframe\n          title=\"Example\"\n          width=\"300\"\n          height=\"200\"\n          src=\"https://www.openstreetmap.org/export/embed.html?bbox=-0.004017949104309083%2C51.47612752641776%2C0.00030577182769775396%2C51.478569861898606&layer=mapnik\">\n        </iframe> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}